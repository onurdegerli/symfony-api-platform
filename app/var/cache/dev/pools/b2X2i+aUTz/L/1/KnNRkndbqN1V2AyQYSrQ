<?php return [PHP_INT_MAX, static function () {

    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['ApiPlatform\\Core\\Annotation\\ApiResource'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('ApiPlatform\\Core\\Annotation\\ApiResource')),
            clone ($p['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
            clone ($p['ApiPlatform\\Core\\Annotation\\ApiFilter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('ApiPlatform\\Core\\Annotation\\ApiFilter')),
            clone $p['ApiPlatform\\Core\\Annotation\\ApiFilter'],
            clone $p['ApiPlatform\\Core\\Annotation\\ApiFilter'],
            clone $p['ApiPlatform\\Core\\Annotation\\ApiFilter'],
        ],
        null,
        [
            'stdClass' => [
                'shortName' => [
                    'cheeses',
                ],
                'itemOperations' => [
                    [
                        'get',
                        'put',
                    ],
                ],
                'collectionOperations' => [
                    [
                        'get',
                        'post',
                    ],
                ],
                'attributes' => [
                    [
                        'normalization_context' => [
                            'groups' => [
                                'cheese_listing:read',
                            ],
                            'swagger_definition_name' => 'Read',
                        ],
                        'denormalization_context' => [
                            'groups' => [
                                'cheese_listing:write',
                            ],
                            'swagger_definition_name' => 'Write',
                        ],
                    ],
                ],
                'repositoryClass' => [
                    1 => 'App\\Repository\\CheeseListingRepository',
                ],
                'filterClass' => [
                    2 => 'ApiPlatform\\Core\\Bridge\\Doctrine\\Orm\\Filter\\BooleanFilter',
                    'ApiPlatform\\Core\\Bridge\\Doctrine\\Orm\\Filter\\SearchFilter',
                    'ApiPlatform\\Core\\Bridge\\Doctrine\\Orm\\Filter\\RangeFilter',
                    'ApiPlatform\\Core\\Serializer\\Filter\\PropertyFilter',
                ],
                'properties' => [
                    2 => [
                        'isPublished',
                    ],
                    [
                        'title' => 'partial',
                        'description' => 'title',
                    ],
                    [
                        'price',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[3],
            $o[4],
            $o[5],
        ],
        []
    );

}];
